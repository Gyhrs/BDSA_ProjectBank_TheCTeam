@using Shared;
@inject HttpClient Http;

<div class="expandedlayout">
        <div class="MainBox ExpProjectBox mb-4 box-layout">
            <h2>@project.Name</h2>
            @if (project.CreatedBy != null)
            {
                <h5>@project.CreatedBy</h5>
            }
            else
            {
                <h5>No Author</h5>
            }
            <br>
            <div class="descriptionBox">@project.Description</div>
        </div>

        <div class="Exp-small-container">
            <div class="ExpProjectBox SmallBox mb-4 box-layout">
                <p><b>Supervisors:</b></p>
                @if (Supervisors != null)
                {
                    foreach (var sv in Supervisors) {
                        <p>@sv.Name : @sv.Email</p>
                    }   
                } else {
                    <p>No supervisors yet</p>
                }
                <p><b>Students:</b></p>
                @if (Students != null)
                {
                    foreach (var stu in Students) {
                        <p>@stu.Name : @stu.Email</p>
                    }   
                } else {
                    <p>No Students yet</p>
                }
            </div>
            <div class="ExpProjectBox SmallBox mb-4 box-layout">
                @foreach (var tag in project.Tags)
                {
                    <PassiveTag TagName="@tag"></PassiveTag>
                }
            </div>
        </div>
</div>

@code {

    [Parameter] public ProjectDTO project { get; set; }

    [Parameter] public List<StudentDTO>? Students { get; set; }
    [Parameter] public List<SupervisorDTO>? Supervisors { get; set;}

    protected override async Task OnInitializedAsync() {
        Students = await Http.GetFromJsonAsync<List<StudentDTO>>("api/Users/students/"+project.Id);
        Supervisors = await Http.GetFromJsonAsync<List<SupervisorDTO>>("api/Users/supervisors/"+project.Id);
    }
}